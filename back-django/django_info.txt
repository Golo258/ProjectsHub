
cmd:
    django-admin - to see possibilities of admin
        startproject - create project

    project_structure:
        manage.py - allow commands
        settings.py - project configuration
        urls.py - routing to views
        wsgi.py - how application and web server communicate with each other

    commands with manage.py:
        runserver- running server on localhost by default
        startapp -creating new application

Applications  and routes:
    in project we can have many applications:
        Each application has to be added into project settings.py as INSTALLED_APP

    views.py - creating http views
    urls.py - mapping created http-views from views
        path(endpoint, view, route_name)

    In project we have to set the application url
        to be able to get into application endpoints
           path('endpoint/', include(app_name.urls))

    Templates:
        Creating dictionary: templates -> name-of-application
        loading templates to views
            render(request,'app/template_name.html')

        Iterating over passed context:
            {% for con in context %}
            {% endfor %}
        Passed context has to be a dictionary:
            context = {
                "name" : "Something to iter"
            }
        Conditional: {% if / else if / else / endif %}
    Extending templates:
        {% extends 'blog/base.html'%}

    Loading static stylesheets:
        Under Html tag: {% load static %}
        <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' %}">

    Redirecting url of view in a tag:
        <a href="{% url 'name_of_url_pattern' %}" from urlpattern path name

    Admin:
        manage.py createsuperuser but before we have to create first migration
        after creating models we have to register them in admin.py
            admin.site.register(model_class)

    Migrations:
        manage.py:
            makemigrationsa
            migrate

        After creating/updating models:
            makemigrations - apply changed of models
            migrate - commit / apply  this changes in database

        To see the migration query content:
            manage.py sqlmigrate app_name  nr_of_migration

        In shell:
            Model.objects.all()
            .first() .last() .filter() .get()
            item1 / item.save()




