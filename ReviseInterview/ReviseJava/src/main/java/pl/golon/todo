TODO:
    1. Automated Testing Experience:
        Przypomnij sobie projekty, w których pracowałeś nad automatyzacją testów.
        Przygotuj przykłady, jakie narzędzia używałeś i jakie problemy udało Ci się rozwiązać.
    2. Programming Languages:
        Skup się na swojej praktycznej znajomości Java, JavaScript/TypeScript lub Pythona.
        Przygotuj się na pytania dotyczące tworzenia testów automatycznych w tych językach.
    3. Protokoły REST / SOAP:
        Przypomnij sobie, jakie masz doświadczenie z testowaniem aplikacji korzystających z tych protokołów.
        Pomyśl o różnicach między nimi i jak testować poszczególne funkcje.
    4. Systemy kontroli wersji (Git):
        Upewnij się, że jesteś komfortowy z podstawowymi operacjami Git, takimi jak tworzenie branchy, commitowanie zmian, rozwiązywanie konfliktów.
        Zarządzanie cyklem życia aplikacji (np. JIRA, HP ALM, Azure DevOps):
        Przygotuj przykłady swojego doświadczenia z tymi narzędziami. Jak korzystałeś z nich w poprzednich projektach?
    5. ISTQB i metodyki testowania:
        Jeśli masz certyfikat ISTQB, przypomnij sobie jego treść i zastosowanie w praktyce.
        Przygotuj się na pytania dotyczące różnych metod testowania.
    6. Umiejętności komunikacyjne:
        Przygotuj się na pytania dotyczące Twoich umiejętności komunikacyjnych.
        Pamiętaj, że są one równie ważne jak techniczne umiejętności.
    7. Znajomość języka angielskiego:
        Upewnij się, że czujesz się komfortowo komunikując się po angielsku, zarówno pisemnie, jak i ustnie.
         Może być potrzebne przeprowadzenie części rozmowy po angielsku.


#---------------------------------------------
TODO:
    Nadpisać te projekty o których robiłem
    Zrobić powtórkę wiadomości z każdego języka
    A potem zrobić do tego testy w ramach nauki
    Projekt:
    Task Manager System
        aplikacja konsolowa do zarządania lista zadań:
            Użytkownik dodaje i wyświetla zadania
            Może je usuwac i zapisywać i ładować liste zadań do pliku
        Wymagania funkcjonalne
            Dodawanie nowego zadania:
                Zadanie powinno mieć tytuł, opis i status (niedokończone, dokończone).
            Wyświetlanie wszystkich zadań:
                Wyświetlanie listy zadań z ich szczegółami.
            Oznaczanie zadania jako zakończone:
                Zmiana statusu zadania na "dokończone".
            Usuwanie zadania:
                Usunięcie zadania z listy.
            Zapisywanie i ładowanie listy zadań:
                Zapisywanie listy zadań do pliku.
                Ładowanie listy zadań z pliku.
    Struktura projektu
        Klasa Task: reprezentująca zadanie.
        Klasa TaskManager: zarządzająca listą zadań.
        Klasa TaskManagerApp: zawierająca metodę główną do interakcji z użytkownikiem.